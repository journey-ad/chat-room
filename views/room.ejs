<!DOCTYPE html>
<html>
<head lang="en">
  <meta charset="UTF-8">
  <title><%=roomId%> - Chat Room</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>
  <link rel="icon" type="image/png" href="/favicon.png"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/kognise/water.css@latest/dist/light.min.css"/>
  <style>
    ::selection {
      background: #444;
      color: #fff;
    }
    html, body {
      max-width: 100%;
      height: 100%;
      padding: 0;
      margin: 0 auto;
      overscroll-behavior: none;
    }

    body.self{
      height: auto;
    }

    body.self .container {
      max-width: 800px;
      margin-top: 5%;
      height: 500px;
      background: #fefefe;
      padding: 20px 30px;
      border-radius: 22px;
    }

    body .nickname .meta {
      display: none;
    }

    body.self .nickname .meta {
      display: inline;
    }

    #lowpoly {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      object-fit: cover;
      z-index: -1;
    }

    .container {
      top: 0;
      width: 100%;
      height: 100%;
      margin: 0 auto;
      padding: 2px;
      box-sizing: border-box;
      display: block;
      position: relative;
    }

    .toast {
      display: none;
      position: absolute;
      top: 45%;
      left: 50%;
      transform: translateX(-50%);
      background: rgba(0,0,0,.5);
      color: #fff;
      font-size: 14px;
      padding: 8px 16px;
      border-radius: 20px;
      animation: toast .3s ease-in-out;
    }

    @keyframes toast{
      0% {
        opacity: 0;
        transform: translateX(-50%) translateY(20px);
      }
      100% {
        opacity: 1;
        transform: translateX(-50%);
      }
    }

    .status-box {
      display: inline-block;
      float: right;
      font-size: 12px;
      color: #666;
    }

    .status-box:hover #userList {
      display: block;
    }

    #userList {
      display: none;
      position: absolute;
      left: 0;
      width: 100%;
      color: brown;
      background: #e0e0e0;
      padding: 10px 14px;
      font-size: 14px;
      box-sizing: border-box;
      word-break: break-all;
      text-align: left;
      z-index: 99;
    }

    #userList .nickname {
      cursor: pointer;
    }

    #userList .nickname.cur {
      color: #dc143c;
    }

    #msgList {
      border: 1px solid #ccc;
      width: 100%;
      height: calc(100% - 60px);
      overflow-y: auto;
      font-size: 12px;
      padding: 0 4px;
      padding-bottom: 2px;
      box-sizing: border-box;
      overscroll-behavior: none;
    }

    .send-box {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      margin-top: 4px;
      text-align: center;
    }

    .send-box input {
      display: inline-block;
      font-size: 14px;
      margin-bottom: 0;
    }

    .send-box input.error {
      border: 1px solid red;
    }

    input[name="name"] {
      width: 15%;
      min-width: 80px;
    }

    .input-wrap{
      position: relative;
      width: 60%;
      height: 40px;
      margin: 0;
      margin-right: 6px;
    }

    input[name="msg"],
    textarea[name="msg"] {
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      max-height: 120px;
      font-size: 14px;
      resize: none;
      margin: 0;
    }

    input[type="button"] {
      width: 20%;
      margin-right: 0;
      padding-left: 0;
      padding-right: 0;
    }

    .color {
      display: inline-block;
      min-width: 20px;
      width: 5%;
      margin-right: 6px;
      overflow: hidden;
    }

    input[type="color"] {
      display: block;
      width: 100%;
      height: 14px;
      padding: 0px;
      margin: 2px 0;
      border-radius: 0;
      box-sizing: border-box;
    }

    input[type="color"]::-webkit-color-swatch-wrapper {
      border-radius: 0;
      padding: 0;
    }

    input[type="color"]::-webkit-color-swatch {
      border-radius: 0;
      border: 0;
    }

    #messageInput {
      height: 80px;
    }

    .message {
      position: relative;
      padding: 0 5px;
      line-height: 1.6;
      word-break: break-all;
      overflow-wrap: break-word;
    }

    .message.highlight {
      display: inline-block;
      border: 1px solid #ff4747;
      margin: 1px 0;
    }

    .message .action {
      position: absolute;
      top: -20px;
      left: 0;
      font-size: 13px;
      padding: 2px 6px;
      background: #fee;
      border: 1px solid #962c07;
    }

    .message .action a {
      color: #270400;
      text-decoration: none;
      cursor: pointer;
      margin-right: 6px;
    }
    .message .action a:last-of-type {
      margin-right: 0;
    }

    .message .nickname {
      padding-right: 5px;
      color: brown;
      font-family: Consolas, Monaco, monospace;
      font-size: 10px;
      cursor: pointer;
    }

    .message .name {
      color: #117743;
      font-weight: bold;
    }

    .message .uid {
      color: #cc1105;
      font-weight: bold;
    }

    .message .time {
      color: #6f6f6f;
    }

    .message .msg {
      font-size: 14px;
    }

    .sys-msg {
      color: #c1bfbf;
      padding-right: 5px;
      padding-left: 5px;
      font-size: 14px;
    }

    #users {
      width: 490px;
      padding: 0 5px 5px;
    }

    @media screen and (max-device-width: 480px) {
      body {
          -webkit-text-size-adjust: none;
      }
    }
  </style>
</head>
<body>
    <div class="container">
      <div class="status-box">Status: <span id="status">-</span> / <span id="online"><%=users.length%></span> online.
        <div id="userList"></div>
      </div>
      <div id="msgList"></div>
      <div class="send-box">
        <input type="text" name="name" id="name" placeholder="nickname" maxlength="32">
        <div class="input-wrap">
          <!--<input type="text" name="msg" id="msg" placeholder="some text..." maxlength="1000">-->
          <textarea type="text" name="msg" id="msg" placeholder="some text..." maxlength="1000"></textarea>
        </div>
        <div class="color">
          <input id="namecolor" type="color" name="namecolor" value="#117743">
          <input id="msgcolor" type="color" name="msgcolor" value="#3d3d3d">
        </div>
        <input type="button" name="send" id="send" value="Send">
      </div>
      <span class="toast"></span>
    </div>

  <script src="/socket.io/socket.io.js"></script>
  <script src="/js/notify.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/xss@1.0.8/dist/xss.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/linkifyjs@2.1.9/dist/linkify.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/linkifyjs@2.1.9/dist/linkify-jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/trianglify@4.0.0/dist/trianglify.bundle.js"></script>
  <script>
    $(function () {
      var userInfo = null;
      var roomInfo = {
        roomId: '<%=roomId%>',
        title: '<%=title%>'
      }
      
      var userName = '';

      var REGEXP_MENTION = ''
      var notify = new Notify()

      var blockList = []

      function init() {
        var socket = io(
            window.location.host,
            {
              query: {
                roomId: roomInfo.roomId
              }
            }
          );

        socket.on('connect', function () {
          $('#status').text('connected.')
          appendMsg({
            type: 'sys',
            msg: 'Welcome to <%= title ? `${title} #${roomId}#` : roomId %>!'
          })

          notify.init()
        });

        socket.on('online', function (userList) {
          console.log('online', userList)
          updateTitle({
            uid: userInfo.uid,
            name: userInfo.name,
            online: userList.length
          })
          $('#online').text(userList.length);
          var list = ''
          $.each(userList, function(idx, obj){
            list += '<span class="nickname'+(userInfo.uid === obj.uid ? ' cur' : '')+'" data-uid="'+extractContent(obj.uid)+'" data-name="'+escapeQuote(extractContent(obj.name))+'">'+extractContent(obj.name)+'('+extractContent(obj.uid)+')</span>, '
          })
          list = list.slice(0, -2)
          $('#userList').html(list);
        });

        socket.on('init', function (user) {
          if(userInfo) return
          userInfo = user
          REGEXP_MENTION = new RegExp('@.*\((' + escapeRegex(userInfo.uid) + ')\)')
          var date = new Date();
          date.setTime(date.getTime()+(7*24*60*60*1000));
          document.cookie = 'uid='+encodeURIComponent(userInfo.uid)+'; path=/; expires='+date.toGMTString();
          $('#name').val(user.name || user.uid);
          console.log('init', user)
        });

        socket.on('msg', function (msgItem) {
          var date = new Date(msgItem.ts * 1000);
          var dateStr = date.toLocaleDateString("en-US") + ' ' + date.toLocaleTimeString("en-US");
          var highlight = false;

          if(msgItem.uid !== userInfo.uid){
            var mentionMe = msgItem.msg.match(REGEXP_MENTION)
            if(mentionMe){
              highlight = true;
              notify.push({
                roomId: roomInfo.roomId,
                from: msgItem.name,
                to: userInfo.name,
                msg: msgItem.msg
              })
            }
          }

          appendMsg({
            type: 'msg',
            name: msgItem.name,
            uid: msgItem.uid,
            time: dateStr,
            msg: msgItem.msg,
            namecolor: msgItem.namecolor,
            msgcolor: msgItem.msgcolor,
            highlight: highlight
          })
        });

        socket.on('sys', function (sysMsg) {
          appendMsg({
            type: 'sys',
            msg: sysMsg
          })
        });

        socket.on('rename', function (info) {
          if(userInfo.uid === info.uid){
            userInfo.name = info.name
            $('#name').val(info.name)
          }
        });

        $('#name').blur(function (){
          var name = $(this).val().trim()
          if(!name || name === userInfo.name) return

          var date = new Date();
          date.setTime(date.getTime()+(7*24*60*60*1000));
          document.cookie = 'name='+encodeURIComponent(name)+'; path=/; expires='+date.toGMTString();
          userInfo.name = name;

          socket.emit('change-name', name);
        })

        $('#send').click(function () {
          var name = $('#name').val(),
              msg = $('#msg').val().trim(),
              namecolor = $('#namecolor').val(),
              msgcolor = $('#msgcolor').val();

          if(!name || !msg) return

          $('#msg').val('').attr('style', '');

          socket.send({
            uid: userInfo.uid,
            name: name,
            msg: msg,
            namecolor: namecolor,
            msgcolor: msgcolor
          });
        })

        $('#msg').on('keypress', function(e) {
          var code = e.keyCode || e.which;
          if(code === 13) {
            e.preventDefault();
            $('#send').click()
          }
        });

        $("#msg").on('change keyup paste', function(e) {
          if(!$(this).val()){
            $(this).attr('style', '');
            return
          }
          var element = e.target;

          $(this).css('overflow', 'hidden');
          $(this).height(0);
          
          var height = element.scrollHeight<=40 ? element.scrollHeight - 19 : element.scrollHeight;

          if(height >= 120) $(this).css('overflow', '');

          $(this).height(height);
        });

        $(document).on('click', '#userList .nickname, #msgList .nickname', function(){
          var $msgEl = $(this).parent('.message'),
              $el = $(this).get(0),
              _pos = $el.getBoundingClientRect(),
              uid = $(this).attr('data-uid'),
              name = $(this).attr('data-name');

          if($msgEl.length === 0) {
            $('#msg').val($('#msg').val() + '@' + name + '(' + uid + ') ');
            $('#msg').trigger('change');
            $('#msg').focus();
          }

          var pos = {
            x: _pos.x,
            y: _pos.y - 30,
          }

          var $action = $('<div class="action">\
              <a herf="javascript:;" data-action="at" data-uid="'+uid+'">@'+name+'</a>\
              <a herf="javascript:;" data-action="block" data-uid="'+uid+'">Block '+name+'</a>\
            </div>');

          $action.on('click', 'a', function(){
            var action = $(this).attr('data-action'),
                uid = $(this).attr('data-uid');

            console.log(action, uid, name)

            if(action === 'at'){
              $('#msg').val($('#msg').val() + '@' + name + '(' + uid + ') ');
              $('#msg').trigger('change');
              $('#msg').focus();
            }else if(action === 'block'){
              confirm('Are you sure to block '+name+'?') && blockUser(uid)
            }
            $action.fadeOut(120, function(){
              $action.remove();
            })
          })
          $(document).one('click', function(){
            $action.fadeOut(120, function(){
              $action.remove();
            })
          })

          $msgEl.prepend($action)
          $action.hide().fadeIn(120);
          return
        })
      }

      try {
        blockList = JSON.parse(localStorage.getItem('blockList')) || []
      } catch (error) {
        blockList = []
      }

      function blockUser(uid){
        blockList.push(uid)
        localStorage.setItem('blockList', JSON.stringify(blockList))
        $('#msgList').find('.message[data-uid="'+uid+'"]').remove()
      }

      $('#msg').on('click', function(){
        $('#msgList').animate({ scrollTop: $('#msgList')[0].scrollHeight }, 300)
      });
      $('#status').text('get record...')
      $.getJSON(location.pathname + '/record', { limit: 100 }, function(data) {
        $('#status').text('connecting...')
        data = data.reverse()
        $.each(data, function(idx, msgItem){
          var date = new Date(msgItem.time * 1000);
          var dateStr = date.toLocaleDateString("en-US") + ' ' + date.toLocaleTimeString("en-US");

          appendMsg({
            type: 'msg',
            name: msgItem.name,
            uid: msgItem.uid,
            time: dateStr,
            msg: msgItem.msg,
            namecolor: msgItem.namecolor,
            msgcolor: msgItem.msgcolor
          })

        })

        init()
      });

      var offset = 100, limit = 100, loading = false, finished = false;
      $('#msgList').on('scroll', function(){
        if(loading || finished) return;
        if($(this).scrollTop() < 300){
          loading = true;
          var scrollHeight = $('#msgList')[0].scrollHeight;
          getRecord(offset, limit, function(){
            $('#msgList').scrollTop($('#msgList')[0].scrollHeight - scrollHeight);
            offset += limit;
            loading = false;
          })
        }
      })

      function getRecord(offset, limit, callback) {
        $.getJSON(location.pathname + '/record', { offset: offset, limit: limit }, function(data) {
          if(data.length === 0){
            finished = true;
            appendMsg({
              type: 'sys',
              msg: 'No more record.'
            }, 'before')
            return
          }
          $.each(data, function(idx, msgItem){
            var date = new Date(msgItem.time * 1000);
            var dateStr = date.toLocaleDateString("en-US") + ' ' + date.toLocaleTimeString("en-US");

            appendMsg({
              type: 'msg',
              name: msgItem.name,
              uid: msgItem.uid,
              time: dateStr,
              msg: msgItem.msg,
              namecolor: msgItem.namecolor,
              msgcolor: msgItem.msgcolor
            }, 'before')

          })

          callback && callback()
        });
      }

      function appendMsg(msgItem, position){
        if(blockList.indexOf(msgItem.uid) !== -1) return;

        var message = '', scrollFlag = false;
        position = position || 'after';

        var parsedMsg = {
          type: msgItem.type,
          name: extractContent(msgItem.name),
          uid: extractContent(msgItem.uid),
          time: extractContent(msgItem.time),
          msg: extractContent(msgItem.msg),
          namecolor: extractContent(msgItem.namecolor),
          msgcolor: extractContent(msgItem.msgcolor)
        }

        switch(msgItem.type){
          case 'sys':
            message = '<div class="sys-msg"><span class="msg">'+extractContent(msgItem.msg)+'</span></div>'
            break;
          
          case 'msg':
            if('<%=roomId%>' === 'journey-ad.github') msgItem.msg = msgItem.msg.replace(/\u53d8\u6001/g, '\u597d\u4eba')
            message = '\
              <div class="message'+ (msgItem.highlight ? ' highlight' : '') + '" data-uid="'+escapeQuote(parsedMsg.uid)+'">\
                <span class="nickname" data-uid="'+escapeQuote(parsedMsg.uid)+'" data-name="'+escapeQuote(parsedMsg.name)+'">\
                <span class="name" style="color: '+escapeQuote(parsedMsg.namecolor)+'">'+parsedMsg.name+'</span><span class="meta">::<span class="uid">'+parsedMsg.uid+'</span>::<span class="time">'+parsedMsg.time+'</span></span>:</span>\
                <span class="msg" style="color: '+escapeQuote(parsedMsg.msgcolor)+'">' + parsedMsg.msg + '</span>\
              </div>';
            break;
        }

        if($('#msgList').scrollTop() + $('#msgList').height() >= $('#msgList')[0].scrollHeight - 2) scrollFlag = true;

        var linkifyOpts = {
          className: 'link',
          attributes: {
            rel: 'nofollow'
          },
          target: '_blank'
        }
        if(position === 'before'){
          $('#msgList').prepend(message);
          $('#msgList .message .msg:first').linkify(linkifyOpts);
        }else{
          $('#msgList').append(message);
          $('#msgList .message .msg:last').linkify(linkifyOpts);
          if(scrollFlag) $('#msgList').scrollTop($('#msgList')[0].scrollHeight);
        }
      }

      function updateTitle(info){
        document.title = info.online + '::' + info.name + '::' + info.uid + '::' + '<%=roomId%>::<%=title%> - Chat Room'
      }

      function extractContent(s) {
        return filterXSS(s, {
          whiteList: []
        });
      };

      var REGEXP_QUOTE = /"/g;
      function escapeQuote(str) {
        return str.replace(REGEXP_QUOTE, "&quot;");
      }

      function escapeRegex(string) {
        return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
      }
    });
  </script>
  <script>
    var isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i)
    if(!isMobile && !inIframe()){
      $('body').addClass('self')
      var pattern = trianglify({
        width: window.innerWidth,
        height: window.innerHeight
      })
      var canvas = pattern.toCanvas()
      canvas.id = 'lowpoly'
      document.body.appendChild(canvas)
    }

    function inIframe() {
      try {
          return window.self !== window.top;
      } catch (e) {
          return true;
      }
    }
  </script> 
</body>
</html>
